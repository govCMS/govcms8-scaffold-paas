---
ahoyapi: v2

commands:
  up:
    usage: Build project.
    cmd: docker-compose up -d "$@";

  down:
    usage: Delete project (CAUTION).
    cmd: |
      if [ "$1" == "y" ]; then
        docker-compose down
      else
        ahoy confirm "Running this command will destroy your current site, database and build? Are you sure you didn't mean ahoy stop?" &&
        # Run this if confirm returns true
        docker-compose down ||
        # Run this if confirm returns false
        echo "OK, probably a wise choice..."
      fi

  build:
    usage: Build project.
    cmd: docker-compose up -d --build "$@"; ahoy govcms-deploy

  cli:
    usage: Start a shell inside cli container.
    cmd: docker-compose exec cli bash

  run:
    usage: Run command inside cli container.
    cmd: docker-compose exec -T cli bash -c "$@"

  govcms-deploy:
    usage: Runs deployment commands (e.g. config import, updb, cr, set up file_stage_proxy)
    cmd: docker-compose exec -T cli govcms-deploy

  drush:
    usage: Run drush commands in cli container.
    cmd: docker-compose exec -T cli drush "$@"

  logs:
    usage: Show Docker logs.
    cmd: docker-compose logs "$@"

  ps:
    usage: List running Docker containers.
    cmd: docker-compose ps

  restart:
    usage: Restart Docker containers.
    cmd: docker-compose restart

  stop:
    usage: Stop Docker containers.
    cmd: docker-compose stop "$@"

  install:
    usage: Install the profile.
    cmd: docker-compose exec -T cli drush si -y "$@"; ahoy govcms-deploy

  login:
    usage: Login to a website.
    cmd: docker-compose exec -T cli drush uli "$@"

  mysql-import:
    usage: Pipe in a sql file.  `ahoy mysql-import local.sql`
    cmd: |
      if [ -e "$@" ] ; then
        docker-compose exec cli bash -c 'drush sql-drop' &&
        docker-compose exec -T cli bash -c 'drush sql-cli' < "$@"
      else echo "Provided sql file" "$@" "does not exist"
      fi

  mysql-dump:
    usage: Dump data out into a file. `ahoy mysql-dump local.sql`
    cmd: docker-compose exec -T cli bash -c 'drush sql-dump --ordered-dump' > "$@"

  lint:
    usage: Lint code
    cmd: docker-compose exec -T test lint

  tests:
    usage: Run all tests.
    cmd: |
      ahoy test-behat
      ahoy test-phpunit
      ahoy lint

  test-behat:
    usage: Run Behat tests.
    cmd: docker-compose exec -T test behat "$@"

  test-phpunit:
    usage: Run phpunit tesets
    cmd: docker-compose exec -T test phpunit --testsuite govcms

  pull:
    usage: Pull latest docker images.
    cmd: docker image ls --format \"{{.Repository}}:{{.Tag}}\" | grep govcms8lagoon/ | grep -v none | xargs -n1 docker pull | cat

  refresh-db:
    usage: Refresh the database container with latest nightly dump.
    cmd: |
      ahoy confirm "Running this command will replace your current database. Are you sure?" &&
      # Run this if confirm returns true
      cat .env | grep MARIADB_DATA_IMAGE | cut -c20- | xargs -n1 docker pull && ahoy up ||
      # Run this if confirm returns false
      echo "OK, probably a wise choice..."

  audit-site:
    usage: Run site audit
    cmd: docker-compose exec -T test drutiny profile:run ci @self "$@"

  confirm:
    cmd: |
      read -r -p "$@ [y/N] " response
      if [[ $response = y ]]
      then
        true
      else
        false
      fi
    hide: true

  my:
    usage: Custom commands for this project. See `ahoy my help`.
    imports:
      - 'custom/ahoy.yml'
