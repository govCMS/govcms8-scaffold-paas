docker-compose-yaml: docker-compose.yml

# Note for devops.
# Please avoid making scripts more than one or two lines, and avoid if/else logic.
# When PaaS users or the support team modify this file, it should be easy to turn things on and off.

tasks:
  pre-rollout:
    - run:
        name: Snapshot the database and config
        command: |
          # @todo Move to https://github.com/govCMS/scaffold-tooling/tree/develop/scripts
          # @see https://github.com/govCMS/govcms8lagoon/pull/111
          cd /app

          DUMP_NAME="pre-deploy-dump.sql"  # Do not change, referred to in post-rollout.
          BACKUP_DIR="/app/web/sites/default/files/private/backups"
          mkdir -p "$BACKUP_DIR"/config

          # Database
          if [[ "$LAGOON_ENVIRONMENT_TYPE" = "production" ]]; then
              drush sql:dump --gzip --result-file="$BACKUP_DIR"/"$DUMP_NAME"
          fi

          # Config
          drush config:export sync -y --destination "$BACKUP_DIR"/config
          tar -czf "$BACKUP_DIR"/config.tar.gz "$BACKUP_DIR"/config
        service: cli
        shell: bash

  post-rollout:
    - run:
        name: Sync from master for new environments
        command: |
          # This if statement checks "is drupal installed and it's not production".
          if tables=$(drush sqlq 'show tables;') && [ -z "$tables" ] && [[ "$LAGOON_ENVIRONMENT_TYPE" != "production" ]]; then drush sql:sync @govcms.prod @self -y; fi
        service: cli
    - run:
        name: Database updates
        command: drush -y updatedb
        service: cli
    - run:
        name: Config import
        command: |
          # Uncomment below to enable.
          # @todo allow this to be controlled from .env or something the client can control.
          # drush config:import -y sync
          # if [[ "$LAGOON_ENVIRONMENT_TYPE" != "production" ]]; then drush config:import -y dev --partial; fi
        service: cli
    - run:
        name: Cache rebuild
        command: drush -y cr
        service: cli
    - run:
        name: Ensure govcms/lagoon modules are enabled
        command: drush en -y govcms_lagoon && drush pmu -y govcms_lagoon
        service: cli
    - run:
        name: Enable non-production modules
        command: if [[ "$LAGOON_ENVIRONMENT_TYPE" != "production" ]]; then drush en stage_file_proxy -y; fi
        service: cli
    - run:
        name: Preserve the backup from this successful post-rollout
        command: |
          BACKUP="/app/web/sites/default/files/private/backups/pre-deploy-dump.sql.gz"
          if -f "$BACKUP"; then mv "$BACKUP" "$BACKUP.last-good.gz"; fi
        service: cli

environments:
  master:
    types:
      mariadb: mariadb-shared
    cronjobs:
      - name: drush cron
        schedule: "0 * * * *"
        command: 'drush cron --root=/app'
        service: cli
