docker-compose-yaml: docker-compose.yml

environments:
  master:
    types:
      mariadb: mariadb-shared
    cronjobs:
      - name: drush cron
        schedule: "0 * * * *"
        command: 'drush cron --root=/app'
        service: cli

# Note regarding tasks in the scaffold.
# Please avoid making scripts more than one or two lines, and avoid if/else logic.
# When PaaS users or the support team modify this file, it should be easy to turn things on and off.

tasks:
  pre-rollout:
    - run:
        name: Snapshot the database and store
        command: if [[ "$LAGOON_ENVIRONMENT_TYPE" = "production" ]]; then drush sql:dump --root=/app --gzip --result-file=/app/web/sites/default/files/private/backups/pre-deploy-dump.sql; fi
        service: cli
        shell: bash
    - run:
        name: Snapshot the config and store
        command: drush cex --root=/app sync -y --destination "$TMP"/config && tar -czf /app/web/sites/default/files/private/backups/pre-deploy-config.tar.gz "$TMP"/config --remove-files
        service: cli
        shell: bash

  post-rollout:
    - run:
        name: New environment, populate database from master
        command: drush status db-status | grep Connected || if [[ "$LAGOON_ENVIRONMENT_TYPE" != "production" ]]; then drush sql:sync @govcms.prod @self -y; fi
        service: cli
        shell: bash
    - run:
        name: Database updates
        command: drush -y updatedb
        service: cli
        shell: bash
    - run:
        name: Config import if enabled
        command: |
          # drush cim -y sync && if [[ "$LAGOON_ENVIRONMENT_TYPE" != "production" ]]; then drush cim -y dev --partial; fi
        service: cli
        shell: bash
    - run:
        name: Cache rebuild
        command: drush -y cr
        service: cli
        shell: bash
    - run:
        name: Ensure govcms/lagoon modules are enabled
        command: drush en -y govcms_lagoon && drush pmu -y govcms_lagoon
        service: cli
        shell: bash
    - run:
        name: Enable non-production modules
        command: if [[ "$LAGOON_ENVIRONMENT_TYPE" != "production" ]]; then drush en stage_file_proxy -y; fi
        service: cli
        shell: bash
    - run:
        name: Final step is preserve the backup
        command: export BACKUP="/app/web/sites/default/files/private/backups/pre-deploy-dump" && if [[ -f "$BACKUP.sql.gz" ]]; then mv "$BACKUP.sql.gz" "$BACKUP-last-good.sql.gz"; fi
        service: cli
        shell: bash
